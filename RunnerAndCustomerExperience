B. Runner and Customer Experience

1. How many runners signed up for each 1 week period? (i.e. week starts 2021-01-01)
select week(registration_date) as week, count(runner_id)
from runners
group by week(registration_date);

2. What was the average time in minutes it took for each runner to arrive at the Pizza Runner HQ to pickup the order?
update runner_orders
set pickup_time = '2020-01-01 18:15:34'
where pickup_time = 'null';

alter table runner_orders
modify pickup_time datetime;

select runner_id, avg(timestampdiff(minute, pickup_time, order_time)) as Average_time
from 
runner_orders inner join customer_orders
on runner_orders.order_id = customer_orders.order_id
group by runner_id;

3. Is there any relationship between the number of pizzas and how long the order takes to prepare?
select customer_orders.order_id, count(pizza_id) as Number_of_pizzas, avg(timestampdiff(minute, pickup_time, order_time)) as Average_Prep_Time
from 
runner_orders inner join customer_orders
on runner_orders.order_id = customer_orders.order_id
group by customer_orders.order_id
order by Average_Prep_Time desc;

4. What was the average distance travelled for each customer?
select customer_id, avg(distance) as avg_distance from
runner_orders inner join customer_orders
on runner_orders.order_id = customer_orders.order_id
group by customer_id
order by customer_id;

5. What was the difference between the longest and shortest delivery times for all orders?
select max(duration) - min(duration) as answer
from runner_orders;

6. What was the average speed for each runner for each delivery and do you notice any trend for these values?
select runner_id, order_id, avg(distance/duration) as average_speed
from runner_orders
group by runner_id, order_id;

7. What is the successful delivery percentage for each runner?
create view temp_1 as(
select sum(
  case when cancellation="Restaurant Cancellation" 
  or cancellation = "Customer Cancellation" then 1
  else 0
  end) as deliveries_cancelled
  from runner_orders);

create view temp as(
  select sum(
  case when cancellation="null" 
    or cancellation=" " then 1
  else 0
  end) as deliveries_successfull
  from runner_orders);
  
  select deliveries_successfull/(deliveries_successfull+ deliveries_cancelled)*100 as success_perrc
  from temp, temp_1;
